<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

use Drupal\Core\Link;

function acas_preprocess_page(&$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    if (is_numeric($node)) {
      $node = \Drupal\node\Entity\Node::load($node);
    }
    $variables['nodeid'] = $node->id();
    $variables['page_type'] = node_type_load($node->bundle())->label();
  }
  if (strpos(\Drupal::request()->getRequestUri(), 'notification') !== FALSE) {
    $variables['formname'] = 'Early conciliation notification form';
  }
  $variables['useful'] = TRUE;
  $variables['#attached']['library'][] =  'general/anything_wrong';
}

function acas_preprocess_menu(&$variables) {
  if ($variables['menu_name'] == 'main') {
    unset($variables['items']['standard.front_page']);
  }
}

function acas_preprocess_field(&$variables) {
  /*
  if (@$variables['entity_type'] == 'node' && @$variables['field_name'] == 'title') {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      if (is_numeric($node)) {
        $node = \Drupal\node\Entity\Node::load($node);
      }
      if ($node->getType() == 'details_page') {
        $parents = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadParents($node->get('field_taxonomy')->target_id);
        foreach($parents as $parent) {
          $variables['taxonomy_parent'] = $parent->getName();
        }
      }
    }
  }
  */
  if (@$variables['entity_type'] == 'media' && @$variables['field_name'] == 'field_file_html') {
    $variables['items'][0]['content']['#template'] = '{{ value|raw }}';
  }
  
  // Notifications
  if (@$variables['entity_type'] == 'node' && @$variables['field_name'] == 'field_summary') {
    $path = urldecode(\Drupal::request()->getRequestUri());
    if (strpos($path, '/already-submitted?ref=') !== FALSE) {
      $a = explode('?ref=', $path);
      $b = explode('&date=', $a[1]);
      $html = $variables['items'][0]['content'];
      $html = str_replace('[REFERENCE]', $b[0], $html);
      $html = str_replace('[DATE]', date('h:i A \o\n d F Y', strtotime($b[1])), $html);
      $variables['items'][0]['content'] = $html;
    }
  }
}

function acas_preprocess_views_view_field(&$variables) {
  if ($variables['field']->realField == 'pageTitle') {
    $a=$variables['field']->getValue($variables['row']);
    $variables['output'] = Drupal\Core\Render\Markup::create(str_replace(' | Acas</a>', '</a>', $variables['output']));
  }
}

function acas_preprocess_block(&$variables) {
  if ($variables['plugin_id'] == 'local_tasks_block') {
    if ($node = \Drupal::routeMatch()->getParameter('node')) {
      if (is_numeric($node)) {
        $node = \Drupal\node\Entity\Node::load($node);
      }
      if ($node->getType() == 'details_page') {
        
      }
    }
  }

  if ($variables['plugin_id'] == 'feedback') {
    $variables['#cache']['max-age'] = 0;
  }
  //if ($variables['plugin_id'] == 'in_this_section_block' || $variables['plugin_id'] == 'landing_page_bottom') {
  if (@$variables['content']) {
    if (isset($variables['content']['#markup'])) {
      if (!$variables['content']['#markup']) {
        $variables['no_display'] = TRUE;
      }else{
        $variables['no_display'] = FALSE;
      }
    }
  }
  //}
  // Notification.
  if ($variables['plugin_id'] == 'system_branding_block') {
    // No mobile hamburger menu
    $variables['no_hamburger'] = TRUE;
  }

  if ($variables['plugin_id'] == 'system_breadcrumb_block' && count($variables['content']['#links']) == 1) {
    unset($variables['content']);
  }
  // Do not cache these blocks
  if ($variables['plugin_id'] == 'feedback') {
    $variables['#cache']['max-age'] = 0;
  }
}

function acas_preprocess_node(&$variables) {
  $variables['changed'] = $variables['node']->getChangedTime();
}

function acas_bootstrap_iconize_text_alter(array &$texts) {
  $texts['matches'][t('Print')->render()] = 'print';
  $texts['contains']['Print'] = 'print';
}

function acas_preprocess_html(&$variables) {
  if ((preg_match('/MSIE\s(?P<v>\d+)/i', @$_SERVER['HTTP_USER_AGENT'], $B) && $B['v'] <= 8) || \Drupal::request()->query->get('ie8')) {
    $variables['ie8'] = TRUE;
  }
}

function acas_preprocess_item_list(&$variables) {
  if ($variables['title'] == 'Did you mean') {
    $variables['did_you_mean'] = TRUE;
  }
}

function acas_theme_suggestions_input_alter(&$suggestions, array $variables) {
  $element = $variables['element'];
  if ($element['#type'] == 'submit' && ($element['#id'] == 'edit-submit-solr-search-content' || $element['#id'] == 'edit-submit-search-content' || $element['#id'] == 'edit-submit-search')) {
    $suggestions[] = 'input__button__search__submit';
  }
}

function acas_preprocess_views_view(&$variables) {
  if ($variables['id'] == 'solr_search_content') {
    $view = $variables['view'];
    $exposed_input = $view->getExposedInput();
    $search_term = $exposed_input['keys'];
    if ($view->total_rows === 0) {
      $text = $variables['empty']['area']['#text'];
      $text = str_replace('KEYS', $search_term, $text);
      $text = str_replace('?articleid=1411', '?q=' . $search_term . '&searchmethod=ANY&continue=Continue&articleid=1411', $text);
      $variables['empty']['area']['#text'] = $text;
    }else if (@$variables['header']['result']) {
      $text = $variables['header']['result']['#markup'];
      $text = str_replace('?articleid=1411', '?q=' . $search_term . '&searchmethod=ANY&continue=Continue&articleid=1411', $text);
      $variables['header']['result']['#markup'] = $text;
    }
  }
}


/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function acas_theme_suggestions_page_alter(&$suggestions, $variables, $hook) {
  /**
   * 404 template suggestion.
   */
  if (!is_null(Drupal::requestStack()->getCurrentRequest()->attributes->get('exception'))) {
    $status_code = Drupal::requestStack()->getCurrentRequest()->attributes->get('exception')->getStatusCode();
    switch ($status_code) {
      case 404: {
        $suggestions[] = 'page__' . (string) $status_code;
        break;
      }
      case 403: {
        $suggestions[] = 'page__' . (string) $status_code;
        break;
      }
      default:
        break;
    }
  }
}

/**
 * Remove suggestions for govuk_webform_elements & webform_telephone.
 *
 * Implements hook__suggestions_HOOK_alter().
 * @return array Suggestions.
*/
function acas_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  if (isset($variables['element']['#type']) && ($variables['element']['#type'] == 'govuk_webform_elements' || $variables['element']['#type'] == 'webform_telephone')) {
    $suggestions = [];
  }
}

// Notification preprocess functions

function acas_preprocess_page_title(&$variables) {
  $uri = \Drupal::request()->getRequestUri();
  if ((strpos($uri, 'notification') !== FALSE || strpos($uri, 'conciliation') !== FALSE) && strpos($uri, 'check-notification-timing') === FALSE  && strpos($uri, 'our-new-early-conciliation-notification-service') === FALSE) {
    $variables['title'] = FALSE;
  }
}

function acas_preprocess_bootstrap_panel(&$variables) {
  if (isset($variables['element']['#webform']) && strpos($variables['element']['#webform'], 'notification') !== FALSE && $variables['element']['#title_display'] == 'invisible') {
    unset($variables['heading']);
  }
}
function acas_preprocess_form_element_label(&$variables) {
  if (isset($variables['element']['#id']) && $variables['element']['#id'] == 'edit-find-address' && $variables['element']['#title_display'] == 'invisible') {
    unset($variables['title']);
  }
}